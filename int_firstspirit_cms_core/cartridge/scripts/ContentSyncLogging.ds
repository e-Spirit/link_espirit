/**
*   @input ContentSyncStatus : String The current sync status
*   @input ValidationStatus : dw.system.Status The validation status.
*   @input ImportStatus : dw.system.Status The validation status.
*   @input JobStepExecution : dw.job.JobStepExecution The job step execution.
*
*/
importPackage( dw.system );

var log = Logger.getLogger("ContentSync");
var step;

function execute( args : PipelineDictionary ) : Number
{
    step = args.JobStepExecution.stepID; 
        
    if (args.ContentSyncStatus === 'IMPORT_OK') {
    	log.info("XML file successfully imported in step [" + step + "] (" + args.ImportStatus.code + ": " + args.ImportStatus.message + ")");
    	logValidationSummary(args);
    	logImportSummary(args);
    	if (step === 'ImportLibrary') {
    		log.info("Triggering update of content search index in step [" + step + "]");
    	}
    } else if (args.ContentSyncStatus === 'IMPORT_ERROR') {
    	log.error("An error occurred during importing the XML file in step [" + step + "] (" + args.ImportStatus.code + ": " + args.ImportStatus.message + ")");
    	logValidationSummary(args);
    } else if (args.ContentSyncStatus === 'VALIDATION_FAILED') {
    	log.error("Validation of XML file failed in step [" + step + "] (" + args.ValidationStatus.code + ": " + args.ValidationStatus.message + ")");
    	logValidationSummary(args);
    } else if (args.ContentSyncStatus === 'VALIDATION_ERROR') {
    	log.error("An error occurred during validating the XML file in step [" + step + "] (" + args.ValidationStatus.code + ": " + args.ValidationStatus.message + ")");
    }

	return PIPELET_NEXT;
}

function logValidationSummary(args : PipelineDictionary )
{
	log.info("Validation summary for step [" + step + "]: " + args.ValidationStatus.details.ValidationWarningCount + "/" + args.ValidationStatus.details.ValidationErrorCount + " Warnings/Errors");
}

function logImportSummary(args : PipelineDictionary )
{
	log.info("Import summary for step [" + step + "]: " + args.ImportStatus.details.DataWarningCount + "/" + args.ImportStatus.details.DataErrorCount + " Warnings/Errors");
}
